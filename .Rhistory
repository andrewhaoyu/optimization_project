for( i in 1:nrow(x.y)){
idx <- which(post.bounds[,1]>=x.y[i,1]&post.bounds[,2]<=x.y[i,2])
pdf[i] <- length(idx)/n
}
result <- data.frame(x.y,pdf=pdf)
idx <- which(abs(result$pdf-0.95)<1e-03)
differ <- result$y[idx]-result$x[idx]
jdx <- which.min(differ)
x.y.95 <- cbind(result$x[idx],result$y[idx])
if(length(jdx)>1){
jdx <- jdx[1]
}
final <- x.y.95[jdx,]
return(final)
}
z <- data$randomsample
r <- rep(1,nrow(data))
idx <- which(is.na(data$OTHER))
r[idx] <- 0
y <- data$OTHER
data <- cbind(z,r,y)
data_count <- table(z,r,y,useNA = "ifany")
n011 <- data_count[[3]]
n111 <- data_count[[4]]
n012 <- data_count[[7]]
n112 <- data_count[[8]]
n013 <- data_count[[11]]
n113 <- data_count[[12]]
n014 <- data_count[[15]]
n114 <- data_count[[16]]
n015 <- data_count[[19]]
n115 <- data_count[[20]]
m00 <- data_count[[21]]
m10 <- data_count[[22]]
n.obs <- c(n011,n012,n013,n014,n015,m00,n111,n112,n113,n114,n115,m10)
rst <- stan(model_code = stan.model,
data = list(N=n.obs),
iter =20000, warmup = 6000, chains = 5,
thin = 5, verbose = TRUE);
print(rst);
post.p <- extract(rst, "p")$p;
post.q <- extract(rst, "q")$q;
post.tp <- extract(rst, "tp")$tp;
post.bounds <- extract(rst, "bounds")$bounds;
a <- CI95_empircal(post.bounds)
a
dim(post.bounds)
rst <- stan(model_code = stan.model,
data = list(N=n.obs),
iter =35000, warmup = 6000, chains = 5,
thin = 5, verbose = TRUE);
CI95_empircal <- function(post.bounds){
x <- post.bounds[,1]
y <- post.bounds[,2]
max_x <- quantile(x,probs = 0.05)
x.seq <- seq(min(x),max_x,0.001)
y.seq <- seq(min(y),max(y),0.001)
n <- nrow(post.bounds)
x.y <- expand.grid(x.seq,y.seq)
pdf <- rep(0,nrow((x.y)))
colnames(x.y) <- c("x","y")
for( i in 1:nrow(x.y)){
idx <- which(post.bounds[,1]>=x.y[i,1]&post.bounds[,2]<=x.y[i,2])
pdf[i] <- length(idx)/n
}
result <- data.frame(x.y,pdf=pdf)
idx <- which(abs(result$pdf-0.95)<1e-06)
differ <- result$y[idx]-result$x[idx]
jdx <- which.min(differ)
x.y.95 <- cbind(result$x[idx],result$y[idx])
if(length(jdx)>1){
jdx <- jdx[1]
}
final <- x.y.95[jdx,]
return(final)
}
post.p <- extract(rst, "p")$p;
post.q <- extract(rst, "q")$q;
post.tp <- extract(rst, "tp")$tp;
post.bounds <- extract(rst, "bounds")$bounds;
a <- CI95_empircal(post.bounds)
a
conbounds <- function(variable){
z <- data$randomsample
r <- rep(1,nrow(data))
idx <- which(is.na(variable))
r[idx] <- 0
y <- variable
data <- cbind(z,r,y)
data_count <- table(z,r,y,useNA = "ifany")
n011 <- data_count[[3]]
n111 <- data_count[[4]]
n012 <- data_count[[7]]
n112 <- data_count[[8]]
n013 <- data_count[[11]]
n113 <- data_count[[12]]
n014 <- data_count[[15]]
n114 <- data_count[[16]]
n015 <- data_count[[19]]
n115 <- data_count[[20]]
m00 <- data_count[[21]]
m10 <- data_count[[22]]
n.obs <- c(n011,n012,n013,n014,n015,m00,n111,n112,n113,n114,n115,m10)
rst <- stan(model_code = stan.model,
data = list(N=n.obs),
iter =35000, warmup = 6000, chains = 5,
thin = 5, verbose = TRUE);
print(rst);
post.p <- extract(rst, "p")$p;
post.q <- extract(rst, "q")$q;
post.tp <- extract(rst, "tp")$tp;
post.bounds <- extract(rst, "bounds")$bounds;
a <- CI95_empircal(post.bounds)
return(a)
}
a.other <- conbouns(data$OHTER)
computebounds <- function(variable){
z <- data$randomsample
r <- rep(1,nrow(data))
idx <- which(is.na(variable))
r[idx] <- 0
y <- variable
data <- cbind(z,r,y)
data_count <- table(z,r,y,useNA = "ifany")
n011 <- data_count[[3]]
n111 <- data_count[[4]]
n012 <- data_count[[7]]
n112 <- data_count[[8]]
n013 <- data_count[[11]]
n113 <- data_count[[12]]
n014 <- data_count[[15]]
n114 <- data_count[[16]]
n015 <- data_count[[19]]
n115 <- data_count[[20]]
m00 <- data_count[[21]]
m10 <- data_count[[22]]
n.obs <- c(n011,n012,n013,n014,n015,m00,n111,n112,n113,n114,n115,m10)
rst <- stan(model_code = stan.model,
data = list(N=n.obs),
iter =35000, warmup = 6000, chains = 5,
thin = 5, verbose = TRUE);
print(rst);
post.p <- extract(rst, "p")$p;
post.q <- extract(rst, "q")$q;
post.tp <- extract(rst, "tp")$tp;
post.bounds <- extract(rst, "bounds")$bounds;
a <- CI95_empircal(post.bounds)
return(a)
}
a.other <- computebounds(data$OHTER)
data <- read.dta13("crisis_study_dataset.dta")
data$OHTER
head(data)
a.other <- computebounds(data$OTHER)
head(data)
a.urgent <- computebounds(data$URGENT)
head(data)
a.urgent
a.sendtoed <- computebounds(data$SENDTOED)
a.sendtoed
a.sendtoed
a.sendtoed <- computebounds(data$SENDTOED)
a.sendtoed
head(data)
a.apptopen <- computebounds(data$APPTOPEN)
a.apptopen
head(data)
a.emerplan <- computebounds(data$EMERPLAN)
a.emerplan
head(data)
a.crishist <- computebounds(data$CRISHIST)
a.crishist
head(data)
a.office <- computebounds(data$OFFICE)
a.office
head(data)
a.cristx <- computebounds(data$CRISTX)
a.cristx
head(data)
a.police <- computebounds(data$POLICE)
a.police
a.ed <- computebounds(data$ED)
dim(data)
try1 <- is.na(data$OTHER)
try2 <- is.na(data$URGENT)
try3 <- is.na(data$OFFICE)
all.euqal(try1,try2)
all.equal(try1,try2)
all.equal(try1,try3)
sum(try3)
sum(try1)
try3 <- is.na(data$POLICE)
sum(try3)
try3 <- is.na(data$ED)
sum(try3)
data$POLICE
sum(z)
table(z)
head(data)
dim(data)
y.interest <- data[,24:33]
try <- apply(y.interests,2,is.na)
try <- apply(y.interest,2,is.na)
try
colSums(try)
try2 <- apply(y.interest,2,table)
try2
a.other
worst.bounds <- function(variable){
y <- variable
y[is.na(variable)] <- 1
a <- rep(0,2)
a[1] <- mean(y)
y[is.na(variable)] <- 2
a[2] <- mean(y)
return(a)
}
worst.bounds <- function(variable){
y <- variable
y[is.na(variable)] <- 1
a <- rep(0,2)
a[1] <- mean(y)
y[is.na(variable)] <- 5
a[2] <- mean(y)
return(a)
}
worst.bounds <- function(variable){
y <- variable
y[is.na(variable)] <- min(variable)
a <- rep(0,2)
a[1] <- mean(y)
y[is.na(variable)] <- max(variable)
a[2] <- mean(y)
return(a)
}
try <- worst.bounds(variable)
try <- worst.bounds(data$OTHER)
try
min(data$OHTER)
?min
worst.bounds <- function(variable){
y <- variable
y[is.na(variable)] <- min(variable,na.rm = T)
a <- rep(0,2)
a[1] <- mean(y)
y[is.na(variable)] <- max(variable,na.rm = T)
a[2] <- mean(y)
return(a)
}
try <- worst.bounds(data$OTHER)
try
a.other
library(readstata13)
library(rstan);
library(NlcOptim)
library(MASS)
library(mvtnorm)
?stan_model
CI95_empircal <- function(post.bounds){
x <- post.bounds[,1]
y <- post.bounds[,2]
max_x <- quantile(x,probs = 0.05)
x.seq <- seq(min(x),max_x,0.001)
y.seq <- seq(min(y),max(y),0.001)
n <- nrow(post.bounds)
x.y <- expand.grid(x.seq,y.seq)
pdf <- rep(0,nrow((x.y)))
colnames(x.y) <- c("x","y")
for( i in 1:nrow(x.y)){
idx <- which(post.bounds[,1]>=x.y[i,1]&post.bounds[,2]<=x.y[i,2])
pdf[i] <- length(idx)/n
}
result <- data.frame(x.y,pdf=pdf)
idx <- which(abs(result$pdf-0.95)<1e-03)
differ <- result$y[idx]-result$x[idx]
jdx <- which.min(differ)
x.y.95 <- cbind(result$x[idx],result$y[idx])
if(length(jdx)>1){
jdx <- jdx[1]
}
final <- x.y.95[jdx,]
return(final)
}
stan.model.N <- "
data {
int<lower=0> N[6];
}
transformed data {
vector[10] ones;
for(i in 1:10){
ones[i] = 1;
}
}
parameters {
simplex[10] p;
}
transformed parameters {
simplex[6] op;
op[1] = p[1];
op[2] = p[2];
op[3] = p[3];
op[4] = p[4];
op[5] = p[5];
op[6]= p[6]+p[7]+p[8]+p[9]+p[10];
}
model {
p  ~ dirichlet(ones);
N  ~ multinomial(op);
}
generated quantities {
real bounds[2];
bounds[1] = p[1]+2*p[2]+3*p[3]+4*p[4]+5*p[5]+(p[6]+p[7]+
p[8]+p[9]+p[10]);
bounds[2] = p[1]+2*p[2]+3*p[3]+4*p[4]+5*p[5]+5*(p[6]+p[7]+
p[8]+p[9]+p[10]);
}
"
sm.na <- stand_model(file='na.stan',model_code="stan.model.N")
sm.na <- stan_model(file='na.stan',model_code="stan.model.N")
sm.na <- stan_model(model_code="stan.model.N")
sm.na <- stan_model(file="stan.model.N")
sm.na <- stan_model(file='stan.model.N')
save(stan.model.N,"stan.mode.N")
?save
save(stan.model.N,file="stan.model.N")
sm.na <- stan_model(file='stan.model.N')
sm.na <- stan_model(model_code ='stan.model.N')
stan.model.N
stan.model <- "
data {
int<lower=0> N[6];
}
transformed data {
vector[10] ones;
for(i in 1:10){
ones[i] = 1;
}
}
parameters {
simplex[10] p;
}
transformed parameters {
simplex[6] op;
op[1] = p[1];
op[2] = p[2];
op[3] = p[3];
op[4] = p[4];
op[5] = p[5];
op[6]= p[6]+p[7]+p[8]+p[9]+p[10];
}
model {
p  ~ dirichlet(ones);
N  ~ multinomial(op);
}
generated quantities {
real bounds[2];
bounds[1] = p[1]+2*p[2]+3*p[3]+4*p[4]+5*p[5]+(p[6]+p[7]+
p[8]+p[9]+p[10]);
bounds[2] = p[1]+2*p[2]+3*p[3]+4*p[4]+5*p[5]+5*(p[6]+p[7]+
p[8]+p[9]+p[10]);
}
"
sm.na <- stan_model(model_code ='stan.model')
sm.na <- stan_model(model_code =stan.model)
save("sm.na",file="sm.na.rdata")
?sampling
variable <- y.interest[,1]
setwd("../realdata")
data <- read.dta13("crisis_study_dataset.dta")
y.interest <- data[,24:33]
z <- data$randomsample
createtable <- function(y){
table(z,y,useNA ="ifany")
}
summary.result <- NULL
for(i in 1:ncol(y.interest)){
summary.result <- rbind(summary.result,createtable(y.interest[,i]))
}
summary.result <- cbind(rep(c(0,1),ncol(y.interest)),summary.result)
variable <- y.interest[,1]
z <- data$randomsample
r <- rep(1,nrow(data))
idx <- which(is.na(variable))
r[idx] <- 0
y <- variable
data <- cbind(z,r,y)
data_count <- table(r,y,useNA = "ifany")
n11 <- data_count[2,1]
n12 <- data_count[2,2]
n13 <- data_count[2,3]
n14 <- data_count[2,4]
n15 <- data_count[2,5]
m <- data_count[1,6]
n.obs <- c(n11,n12,n13,n14,n15,m)
rst <- sampling(sm.na,
data = list(N=n.obs),
iter =35000, warmup = 6000, chains = 5,
thin = 5, verbose = TRUE);
print(rst);
post.p <- extract(rst, "p")$p;
post.bounds <- extract(rst, "bounds")$bounds;
a <- CI95_empircal(post.bounds)
a
load("Random.Bayesian.Rdata")
Bd.result
a
computebounds <- function(variable){
z <- data$randomsample
r <- rep(1,nrow(data))
idx <- which(is.na(variable))
r[idx] <- 0
y <- variable
data <- cbind(z,r,y)
data_count <- table(r,y,useNA = "ifany")
n11 <- data_count[2,1]
n12 <- data_count[2,2]
n13 <- data_count[2,3]
n14 <- data_count[2,4]
n15 <- data_count[2,5]
m <- data_count[1,6]
n.obs <- c(n11,n12,n13,n14,n15,m)
rst <- sampling(sm.na,
data = list(N=n.obs),
iter =35000, warmup = 6000, chains = 5,
thin = 5, verbose = TRUE);
print(rst);
post.p <- extract(rst, "p")$p;
post.bounds <- extract(rst, "bounds")$bounds;
a <- CI95_empircal(post.bounds)
return(a)
}
y.interest <- data[,24:33]
z <- data$randomsample
createtable <- function(y){
table(z,y,useNA ="ifany")
}
summary.result <- NULL
for(i in 1:ncol(y.interest)){
summary.result <- rbind(summary.result,createtable(y.interest[,i]))
}
summary.result <- cbind(rep(c(0,1),ncol(y.interest)),summary.result)
#try2 <- apply(y.interest,2,createtable)
Na.result <- NULL
for(i in
1:ncol(y.interest)){
Na.result <- rbind(Na.result,computebounds(y.interest[,i]))
}
Na.result <- NULL
for(i in 1:ncol(y.interest)){
Na.result <- rbind(Na.result,computebounds(y.interest[,i]))
}
head(data)
setwd("../realdata")
data <- read.dta13("crisis_study_dataset.dta")
y.interest <- data[,24:33]
z <- data$randomsample
createtable <- function(y){
table(z,y,useNA ="ifany")
}
summary.result <- NULL
for(i in 1:ncol(y.interest)){
summary.result <- rbind(summary.result,createtable(y.interest[,i]))
}
summary.result <- cbind(rep(c(0,1),ncol(y.interest)),summary.result)
#try2 <- apply(y.interest,2,createtable)
Na.result <- NULL
for(i in 1:ncol(y.interest)){
Na.result <- rbind(Na.result,computebounds(y.interest[,i]))
}
i
CI95_empircal <- function(post.bounds){
x <- post.bounds[,1]
y <- post.bounds[,2]
max_x <- quantile(x,probs = 0.05)
x.seq <- seq(min(x),max_x,0.001)
y.seq <- seq(min(y),max(y),0.001)
n <- nrow(post.bounds)
x.y <- expand.grid(x.seq,y.seq)
pdf <- rep(0,nrow((x.y)))
colnames(x.y) <- c("x","y")
for( i in 1:nrow(x.y)){
idx <- which(post.bounds[,1]>=x.y[i,1]&post.bounds[,2]<=x.y[i,2])
pdf[i] <- length(idx)/n
}
result <- data.frame(x.y,pdf=pdf)
idx <- which(abs(result$pdf-0.95)<1e-03)
differ <- result$y[idx]-result$x[idx]
jdx <- which.min(differ)
x.y.95 <- cbind(result$x[idx],result$y[idx])
if(length(jdx)>1){
jdx <- jdx[1]
}
final <- x.y.95[jdx,]
return(final)
}
Na.result <- NULL
for(i in 1:ncol(y.interest)){
Na.result <- rbind(Na.result,computebounds(y.interest[,i]))
}
result.na
Na.result
Bd.result
realdata.Result <- cbind(Na.result,Bd.result)
realdata.Result
library(xtable)
xtable(realdata.Result)
Na.result
Bd.result
xtable(realdata.Result)
getwd(0)
getwd()
save(realdata.Result,file = "realdata.Result.rdata")
